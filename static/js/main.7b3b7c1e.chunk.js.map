{"version":3,"sources":["components/Navbar.jsx","components/TextForm.jsx","components/Alert.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","tittle","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","hometext","role","placeholder","onClick","toggleMOde","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","value","onChange","event","console","log","target","backgroundColor","rows","newText","toLocaleUpperCase","showAlert","toLocaleLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","App","setMode","_useState3","_useState4","setalert","massage","setTimeout","Action","body","title","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7b3b7c1e.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>    <div>\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.tittle}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a  className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.hometext}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n        <a className=\"nav-link active\" aria-current=\"page\" href= \"#\">About</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            else\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMOde} type=\"checkbox\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode===\"light\"?\" Enable dark mode\":\" Enable light mode\"}</label>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n    </>\r\n\r\n  )\r\n}","import React ,{useState}from 'react'\r\nexport default function TextForm(props) {\r\nconst [text,setText]=useState(\"\");\r\nconst handleupClick=()=>{\r\n    let newText=text.toLocaleUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted into upper case\",\"success\");\r\n    \r\n} \r\nconst handleLpClick=()=>{\r\n    let newText=text.toLocaleLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted into lower case\",\"success\");\r\n} \r\nconst handleclearClick=()=>{\r\n    let newText=\"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleard\",\"success\");\r\n} \r\nconst handleCopy = () => {\r\n  var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n  text.select();\r\n  navigator.clipboard.writeText(text.value);\r\n}\r\nconst handleExtraSpaces = () => {\r\n  let newText = text.split(/[ ]+/);\r\n  setText(newText.join(\" \"))\r\n}\r\nconst Onchange=(event)=>{\r\n    console.log(\"onchange\");\r\n    setText(event.target.value);\r\n}\r\n  return (\r\n    <>\r\n    <div className='container'style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>Enter The text to Analyze</h1>\r\n            <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={Onchange} id=\"exampleFormControlTextarea1\"style={{backgroundColor: props.mode==='dark'?'grey':'light',color: props.mode==='dark'?'white':'black'}} rows=\"8\"></textarea>\r\n            <button className=\"btn btn-outline-primary my-3 mx-1\" onClick={handleupClick}>Convert To Uper case</button>\r\n            <button className=\"btn btn-outline-primary my-3 mx-1\" onClick={handleLpClick}>Convert To Lower case</button>\r\n            <button className=\"btn btn-outline-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-outline-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n            <button className=\"btn btn-outline-primary my-3 mx-1\" onClick={handleclearClick}>Clear</button>\r\n        </div>\r\n    </div>\r\n    <div className=\"container\"style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n      <h1>Your text summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} charatcters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length > 0 ? text:\"Enter text to preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize( props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React,{useState} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\n// import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\n \nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showAlert=(massage,type)=>{\n    setalert({\n      msg:massage,\n      type:type\n    })\n  }\n  const toggleMOde=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode is enabled\",\"success\");\n      document.title='TECH -DARK mode is enabled';\n      setTimeout(() => {\n        document.title='Tech Field is amazing';\n      }, 2000);\n      setTimeout(() => {\n        document.title='Install now white devil';\n      }, 2000);\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode is enabled\",\"success\");\n      document.title='TECH -LIGHT mode is enabled';\n      setTimeout(() => {\n        document.title='Tech Field is amazing';\n      }, 2000);\n    }\n  }\n  setTimeout(() => {\n    setalert(null);\n  }, 1500);\n  \n  return (\n    <>\n     {/* <Router> */}\n     <Navbar tittle=\"Tech\" hometext=\"HOME\" Action=\"hey how was u\" mode={mode} toggleMOde={toggleMOde}/>\n     <Alert alert={alert}/>\n     <div className=\"container my-3\">\n     {/* <Switch>\n          <Route exact path=\"/About\">\n          <About/>\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm mode={mode} showAlert={showAlert} />\n          {/* </Route>\n        </Switch> */}\n     </div>\n     {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}